// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryCart_Customer.Migrations
{
    [DbContext(typeof(DeliveryCartContext))]
    partial class DeliveryCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("DeliveryCart.Models.Customer", b =>
                {
                    b.Property<int>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("customerAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("customerEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("customerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("customerPhoneNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("customerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DeliveryCart.Models.DeliveryDriver", b =>
                {
                    b.Property<int>("deliveryDriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("deliveryDriverName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("deliveryDriverPhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderID")
                        .HasColumnType("INTEGER");

                    b.HasKey("deliveryDriverID");

                    b.ToTable("DeliveryDriver");
                });

            modelBuilder.Entity("DeliveryCart.Models.Item", b =>
                {
                    b.Property<int>("itemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("itemName")
                        .HasColumnType("TEXT");

                    b.Property<double>("itemPrice")
                        .HasColumnType("REAL");

                    b.HasKey("itemID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DeliveryCart.Models.Order", b =>
                {
                    b.Property<int>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("customerID")
                        .HasColumnType("TEXT");

                    b.Property<int?>("customerID1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("deliveryDriverID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("orderID");

                    b.HasIndex("customerID1");

                    b.HasIndex("deliveryDriverID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.Property<int>("OrdersorderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderItemsitemID")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrdersorderID", "orderItemsitemID");

                    b.HasIndex("orderItemsitemID");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("DeliveryCart.Models.Order", b =>
                {
                    b.HasOne("DeliveryCart.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customerID1");

                    b.HasOne("DeliveryCart.Models.DeliveryDriver", "DeliveryDriver")
                        .WithMany("Orders")
                        .HasForeignKey("deliveryDriverID");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryDriver");
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.HasOne("DeliveryCart.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersorderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeliveryCart.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("orderItemsitemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeliveryCart.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DeliveryCart.Models.DeliveryDriver", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
